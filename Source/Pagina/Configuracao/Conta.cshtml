@page
@model ContaModel
@{
    ViewData["Title"] = "Conta";
}

@inject BancoVirtualEstudantilWeb.Services.Profile.ProfileManager ProfileManager
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Minha Conta
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Inicio</a></li>
        <li><a href="#">Configuração</a></li>
        <li class="active">Minha Conta</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">

    <div class="row">
        <div class="col-lg-2">

        </div>
        <div class="col-lg-8">
            <!-- Account Settings -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Perfil público</h3>
                </div>
                <div class="box-body box-account">
                    <form id="formChangePassword" asp-controller="Profile" asp-action="@(ProfileManager.IsHasPassword(ProfileManager.CurrentUser) ? "ChangePassword" : "SetPassword")"
                          class="form-horizontal" method="post">
                        @if (ProfileManager.IsHasPassword(ProfileManager.CurrentUser))
                        {
                            <div class="form-group">

                                <label for="OldPassword" class="col-sm-2 control-label">Senha Atual</label>

                                <div class="col-sm-10">
                                    <input type="password" class="form-control" name="OldPassword" placeholder="Senha Atual"
                                           data-val="true"
                                           data-val-required="A senha atual é necessária.">
                                    <span class="field-validation-valid help-block"
                                          data-valmsg-for="OldPassword" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info alert-dismissible" role="alert">
                                Você não possui um nome de usuário / senha local para este site.
                                Adicione um local para que você possa conectar sem um ser externamente.
                            </div>
                        }
                        <div class="form-group">
                            <label for="inputNewPassword" class="col-sm-2 control-label">Senha Nova</label>

                            <div class="col-sm-10">
                                <input type="password" class="form-control" id="inputNewPassword" name="NewPassword" placeholder="New password"
                                       data-val="true"
                                       data-val-length="A senha deve ter no mínimo 6 e no máximo 100 caracteres."
                                       data-val-length-max="100"
                                       data-val-length-min="6"
                                       data-val-regex="O campo Senha deve corresponder à expressão regular &#x27;^((?=.*[a-z])(?=.*[A-Z])(?=.*\d).&#x2B;$)&#x27;."
                                       data-val-regex-pattern="^((?=.*[a-z])(?=.*[A-Z])(?=.*\d).&#x2B;$)"
                                       data-val-required="O campo de senha é necessária.">
                                <span class="field-validation-valid help-block"
                                      data-valmsg-for="NewPassword"
                                      data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="inputConfirmPassword" class="col-sm-2 control-label">Confirme a Senha</label>

                            <div class="col-sm-10">
                                <input type="password" class="form-control" id="inputConfirmPassword" name="ConfirmPassword" placeholder="Confirme a Senha"
                                       data-val="true"
                                       data-val-equalto="As senhas não coincidem."
                                       data-val-equalto-other="NewPassword">
                                <span class="field-validation-valid help-block"
                                      data-valmsg-for="ConfirmPassword"
                                      data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-primary">Salvar</button>
                            </div>
                        </div>
                        <div id="panelChangePasswordErrors" class="alert alert-danger" style="display:none;"></div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-2">
        </div>
    </div>
</section>

@section Scripts {
    <!-- Page script -->
    <script>
        $(function () {
            $("#formChangePassword").submit(function (e) {
                e.preventDefault();

                if (!$("#formChangePassword").valid())
                    return;

                var form = $(this);
                var data = form.serialize();

                $('#panelChangePasswordErrors').hide();
                $('#panelChangePasswordErrors').empty();

                $.ajax({
                    url: form.attr("action"), // "/Profile/ChangePassword",
                    contentType: "application/x-www-form-urlencoded; charset=utf-8",
                    method: "POST",
                    data: data,
                    success: function (user) {
                        alert("Password Changed!");
                        form[0].reset();
                    },
                    error: function (jxqr, error, status) {
                        // парсинг json-объекта
                        console.log(jxqr);
                        console.log(error);
                        console.log(status);
                        if (jxqr.responseText === "") {
                            $('#panelChangePasswordErrors').append("<p>" + jxqr.statusText + "</p>");
                        }
                        else {
                            var response = JSON.parse(jxqr.responseText);
                            // добавляем общие ошибки модели
                            if (response) {

                                $.each(response, function (index, item) {
                                    $('#panelChangePasswordErrors').append("<p>" + item + "</p>");
                                });
                            }
                            // добавляем ошибки свойства Name
                            if (response['Name']) {

                                $.each(response['Name'], function (index, item) {
                                    $('#panelChangePasswordErrors').append("<p>" + item + "</p>");
                                });
                            }
                            // добавляем ошибки свойства Age
                            if (response['Age']) {
                                $.each(response['Age'], function (index, item) {
                                    $('#panelChangePasswordErrors').append("<p>" + item + "</p>");
                                });
                            }
                        }

                        $('#panelChangePasswordErrors').show();
                    }
                })
            });
        })
    </script>
}
